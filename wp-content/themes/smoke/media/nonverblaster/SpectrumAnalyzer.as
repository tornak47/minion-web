package nonverblaster {	import flash.display.*;	import flash.media.*;	import flash.net.*;	import flash.events.*;	import flash.utils.*;		public class SpectrumAnalyzer extends Sprite {		// Settings		private var lineThickness	:Number = 2;		private var lineColor		:Number;		//		private var music			:Sound;		private var ba				:ByteArray;				private var line			:Sprite = new Sprite();				private var level			:Number = 0;		private var i				:uint;				public function SpectrumAnalyzer($music:Sound, $ba:ByteArray) {			music = $music;			ba = $ba;			addEventListener(Event.ADDED_TO_STAGE, aH);			mouseEnabled = false;			line.mouseEnabled = false;			Glo.bal.spectrum = this;		}		private function aH(e:Event){			this.addChild(line);			addEventListener(Event.ENTER_FRAME, processSound);		}		private function processSound(ev:Event):void {			x = y = 0;			try {				SoundMixer.computeSpectrum(ba, true, 0);				var maxScale = Glo.bal.stageHeight / 4;				var posY = Math.floor(Glo.bal.stageHeight / 2);				var blockWidth = (Glo.bal.stageWidth / 256) - 1;				var lg = line.graphics;				lg.clear();				lg.moveTo(0, posY);				lg.beginFill(Glo.bal.controlColour);								for (i = 0; i < 256; i++) {					level = ba.readFloat();					lg.drawRect((Glo.bal.stageWidth / 256) * i, posY, blockWidth, -(.5 + Math.random() * 1) + level * -maxScale);				}				for (i = 0; i < 256; i++) {					level = ba.readFloat();					lg.drawRect((Glo.bal.stageWidth / 256) * i, posY, blockWidth, (.5 + Math.random() * 1) + level * maxScale);				}				lg.endFill();			} catch (e:Error){};		}		public function pause(){			removeEventListener(Event.ENTER_FRAME, processSound);		}		public function resume(){			addEventListener(Event.ENTER_FRAME, processSound);		}	}}