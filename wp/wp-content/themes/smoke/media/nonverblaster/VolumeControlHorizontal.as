package nonverblaster {	import flash.display.*;	import flash.events.*;	public class VolumeControlHorizontal extends MovieClip {				public var isOn 			:Boolean = false;		public var pressed 			:Boolean = false;				private var theVolume		:Number = 1;		private var newVolumeValue	:Number = 1;				private var i				:uint;				private var main			:MovieClip;				public function VolumeControlHorizontal(){			main = Glo.bal.main;			adjustLines();			addEventListener(Event.ADDED_TO_STAGE, aH);			addEventListener(Event.REMOVED_FROM_STAGE, rH);		}		private function aH(e:Event){			addEventListener(Event.ENTER_FRAME, loop);		}		private function rH(e:Event){			removeEventListener(Event.ENTER_FRAME, loop);		}		private function loop(e:Event){			computeVolume();		}		private function adjustLines(){			for(i = 0; i <= 10; i ++){				grf["line"+i].height = 1 + 5 * (i / 10);			}		}		public function computeVolume():void {			if(isOn == true){				if (pressed == true) {					volumeSliderRules();				}			}			if(Glo.bal.main.isSeeking != true){				moveVolumeBar(main.getVolume());			}		}		private function volumeSliderRules():void {			if(Glo.bal.mouseOnStage == true){				newVolumeValue = mouseX / sliderBar.width;				if (newVolumeValue > 1.5) {					newVolumeValue = 1.5;				} else if (newVolumeValue < 0) {					newVolumeValue = 0;				}				main.setVolume(newVolumeValue);			}		}		private function volumeValueRules():void {			moveVolumeBar(main.getVolume());		}		private function moveVolumeBar(targetX):void {			for (i=1; i<=10; i++) {				if(i/11 < targetX){					grf["line"+i].targetAlpha = 1;				} else {					grf["line"+i].targetAlpha = .3;				}				grf["line"+i].alpha += (grf["line"+i].targetAlpha - grf["line"+i].alpha) / 1.5;			}		}		private function toggleVolumeControl(targetY):void {			/*MovieClip(parent).volumeBack.height = grf.volumeFrame.height - (y + 1);			grf.volumeFrame.sides.height += (targetY - grf.volumeFrame.sides.height)/3;			volumeMask.height = grf.volumeFrame.sides.height+2;			grf.volumeFrame.volumeTop.y = -grf.volumeFrame.sides.height-2;*/		}	}}