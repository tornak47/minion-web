package nonverblaster {	import flash.ui.*;	import flash.events.*;	import flash.display.*;	import flash.text.*;	import flash.net.*;	import flash.system.System;		public class CustomContextMenu extends MovieClip {		public var myContextMenu			:ContextMenu;		public var main						:MovieClip;		private var contextPlane			:MovieClip;		public var fullScreenItem			:ContextMenuItem;		public var smoothingItem			:ContextMenuItem;		public var soundItem				:ContextMenuItem;		public var resetItem				:ContextMenuItem;		public var subsItem1				:ContextMenuItem;		public var subsItem2				:ContextMenuItem;				public function CustomContextMenu(_main) {			main = _main;			Glo.bal.contextMenu = this;		}		public function init(){			this.addEventListener(MouseEvent.ROLL_OVER, mh);			this.alpha = .3;			myContextMenu = new ContextMenu();						removeDefaultItems();			addCustomMenuItems();						myContextMenu.addEventListener(ContextMenuEvent.MENU_SELECT, menuSelectHandler);						main.contextMenu = myContextMenu;			main.back.contextMenu = myContextMenu;			main.control.contextMenu = myContextMenu;			Glo.bal.customContextMenu = myContextMenu;		};		private function mh(e:Event){			trace("la")		}		private function menuSelectHandler(event:ContextMenuEvent){					}		private function removeDefaultItems():void {			myContextMenu.hideBuiltInItems();			var defaultItems:ContextMenuBuiltInItems = myContextMenu.builtInItems;		}		private function addCustomMenuItems():void {			if(Glo.bal.media != "audio"){				fullScreenItem = new ContextMenuItem("enable FullScreen");				myContextMenu.customItems.push(fullScreenItem);				fullScreenItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, fullScreenHandler);								smoothingItem = new ContextMenuItem("disable Smoothing");				myContextMenu.customItems.push(smoothingItem);				smoothingItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, smoothingHandler);			}			soundItem = new ContextMenuItem("disable Sound");			myContextMenu.customItems.push(soundItem);			soundItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, soundHandler);						resetItem = new ContextMenuItem("reset Player");			myContextMenu.customItems.push(resetItem);			resetItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, resetHandler);						subsItem1 = new ContextMenuItem("disable Subtitles", true);			myContextMenu.customItems.push(subsItem1);			subsItem1.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, subsHandler1);			subsItem1.visible = false;						subsItem2 = new ContextMenuItem("copy Subtitles to clipboard");			myContextMenu.customItems.push(subsItem2);			subsItem2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, subsHandler2);			subsItem2.visible = false;						var linkItem:ContextMenuItem = new ContextMenuItem("* Player powered by NonverBlaster:hover *", true);			myContextMenu.customItems.push(linkItem);			linkItem.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, linkHandler);		}		public function addSubsItem(){			subsItem1.visible = true;			subsItem2.visible = true;		}		private function fullScreenHandler(event:ContextMenuEvent):void {			main.toggleFullScreen();		}		private function soundHandler(event:ContextMenuEvent):void {			main.toggleVolume();		}		private function smoothingHandler(event:ContextMenuEvent):void {			main.toggleSmoothing();		}		private function resetHandler(event:ContextMenuEvent){			main.resetAll();		}		private function subsHandler1(event:ContextMenuEvent){			Glo.bal.subTitles.toggleSubs();		}		private function subsHandler2(event:ContextMenuEvent){			System.setClipboard(Glo.bal.subTitles.plainXML);		}		private function linkHandler(event:ContextMenuEvent):void {			navigateToURL(new URLRequest("http://www.nonverbla.de/blog/2008/09/15/nonverblasterhover/"));		}	}}